/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package bulletinboard.api;

import java.util.Date;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import bulletinboard.model.Announcement;
import bulletinboard.model.AnnouncementType;
import bulletinboard.model.Reply;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;

@Api(value = "Bulletinboard", description = "the Bulletinboard API")
public interface BulletinboardApi {

    @ApiOperation(value = "", nickname = "v1BulletinboardGet", notes = "Returns a list of announcements as per filter", response = Announcement.class, responseContainer = "List", authorizations = {
            @Authorization(value = "oAuth2Password", scopes = {
            })}, tags = {"Bulletinboard",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Successful pull of home appliance information", response = Announcement.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "Bad Request. Please check the parameters"),
            @ApiResponse(code = 401, message = "Unauthorized. Please check your credentials"),
            @ApiResponse(code = 403, message = "Forbidden. Sorry, you can not access this resource.")})
    @RequestMapping(value = "/v1/bulletinboard",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<?> v1BulletinboardGet(@Min(1) @Max(10) @ApiParam(value = "Page number", allowableValues = "") @Valid @RequestParam(value = "pageNumber", required = false) Integer pageNumber, @ApiParam(value = "Issuer") @Valid @RequestParam(value = "issuer-id", required = false) Integer issuerId, @ApiParam(value = "Date of creation") @Valid @RequestParam(value = "creation-date", required = false) @DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss.SSS") Date creationDate, @ApiParam(value = "external id of announcement") @Valid @RequestParam(value = "external-id", required = false) Integer externalId);


    @ApiOperation(value = "", nickname = "v1BulletinboardTypesGet", notes = "Returns a list of announcement types", response = AnnouncementType.class, responseContainer = "List", authorizations = {
            @Authorization(value = "oAuth2Password", scopes = {
            })}, tags = {"Bulletinboard",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Successful pull of appliance types", response = AnnouncementType.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "Bad Request. Please check the parameters"),
            @ApiResponse(code = 401, message = "Unauthorized. Please check your credentials"),
            @ApiResponse(code = 403, message = "Forbidden. Sorry, you can not access this resource.")})
    @RequestMapping(value = "/v1/bulletinboard/types",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<?> v1BulletinboardTypesGet();


    @ApiOperation(value = "", nickname = "v1BulletinboardIdGet", notes = "Gets an announcement by its id", response = Announcement.class, authorizations = {
            @Authorization(value = "oAuth2Password", scopes = {
            })}, tags = {"Bulletinboard",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Successful pull of home appliance information", response = Announcement.class),
            @ApiResponse(code = 400, message = "Bad Request. Please check the parameters"),
            @ApiResponse(code = 401, message = "Unauthorized. Please check your credentials"),
            @ApiResponse(code = 403, message = "Forbidden. Sorry, you can not access this resource.")})
    @RequestMapping(value = "/v1/bulletinboard/{announcement-id}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<?> v1BulletinboardIdGet(@ApiParam(value = "External id of announcement", required = true) @PathVariable("announcement-id") Integer announcementId);


    @ApiOperation(value = "", nickname = "v1BulletinboardIdReplyGet", notes = "Gets all replies for a specific announcement", response = Reply.class, responseContainer = "List", authorizations = {
            @Authorization(value = "oAuth2Password", scopes = {
            })}, tags = {"Bulletinboard",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Successful pull of all replies", response = Reply.class, responseContainer = "List"),
            @ApiResponse(code = 400, message = "Bad Request. Please check the parameters"),
            @ApiResponse(code = 401, message = "Unauthorized. Please check your credentials"),
            @ApiResponse(code = 403, message = "Forbidden. Sorry, you can not access this resource.")})
    @RequestMapping(value = "/v1/bulletinboard/{announcement-id}/reply",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<?> v1BulletinboardIdReplyGet(@ApiParam(value = "External id of announcement", required = true) @PathVariable("announcement-id") Integer announcementId);


    @ApiOperation(value = "", nickname = "v1BulletinboardIdReplyPost", notes = "Adds new reply", authorizations = {
            @Authorization(value = "oAuth2Password", scopes = {
            })}, tags = {"Bulletinboard",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Successfully added a new reply"),
            @ApiResponse(code = 400, message = "Bad Request. Please check the parameters"),
            @ApiResponse(code = 401, message = "Unauthorized. Please check your credentials"),
            @ApiResponse(code = 403, message = "Forbidden. Sorry, you can not access this resource.")})
    @RequestMapping(value = "/v1/bulletinboard/{announcement-id}/reply",
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<?> v1BulletinboardIdReplyPost(@ApiParam(value = "", required = true) @Valid @RequestBody Reply body, @ApiParam(value = "External id of announcement", required = true) @PathVariable("announcement-id") Integer announcementId);


    @ApiOperation(value = "", nickname = "v1BulletinboardPost", notes = "Adds new announcement", authorizations = {
            @Authorization(value = "oAuth2Password", scopes = {
            })}, tags = {"Bulletinboard",})
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "Successfully created a new announcement"),
            @ApiResponse(code = 400, message = "Bad Request. Please check the parameters"),
            @ApiResponse(code = 401, message = "Unauthorized. Please check your credentials"),
            @ApiResponse(code = 403, message = "Forbidden. Sorry, you can not access this resource.")})
    @RequestMapping(value = "/v1/bulletinboard",
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<?> v1BulletinboardPost(@ApiParam(value = "", required = true) @Valid @RequestBody Announcement body);

}
